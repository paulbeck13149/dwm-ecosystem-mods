diff --git a/config.def.h b/config.def.h
index 1c0b587..e51c1c0 100644
--- a/config.def.h
+++ b/config.def.h
@@ -84,6 +84,7 @@ static Key keys[] = {
 	{ MODKEY,                       XK_period, focusmon,       {.i = +1 } },
 	{ MODKEY|ShiftMask,             XK_comma,  tagmon,         {.i = -1 } },
 	{ MODKEY|ShiftMask,             XK_period, tagmon,         {.i = +1 } },
+	{ MODKEY|ShiftMask,             XK_c,      cyclewindows,   {0} },
 	TAGKEYS(                        XK_1,                      0)
 	TAGKEYS(                        XK_2,                      1)
 	TAGKEYS(                        XK_3,                      2)
diff --git a/dwm.c b/dwm.c
index 4465af1..a5ce993 100644
--- a/dwm.c
+++ b/dwm.c
@@ -186,6 +186,7 @@ static void configurerequest(XEvent *e);
 static Monitor *createmon(void);
 static void destroynotify(XEvent *e);
 static void detach(Client *c);
+static void cyclewindows(const Arg *arg);
 static void detachstack(Client *c);
 static Monitor *dirtomon(int dir);
 static void drawbar(Monitor *m);
@@ -1053,6 +1054,28 @@ detach(Client *c)
 		*tc = c->next;
 }
 
+void
+cyclewindows(const Arg *arg)
+{
+	Client *c, *last;
+	if (!selmon->sel)
+		return;
+	for (c = selmon->clients; c && c->next; c = c->next);
+	last = c;
+	if (selmon->sel == last) {
+		detach(selmon->sel);
+		attach(selmon->sel);
+	} else {
+		for (c = selmon->clients; c && c->next != selmon->sel; c = c->next);
+		if (c) {
+			c->next = selmon->sel->next;
+			selmon->sel->next = selmon->clients;
+			selmon->clients = selmon->sel;
+		}
+	}
+	focus(NULL);
+	arrange(selmon);
+}
 
 void
 detachstack(Client *c)
